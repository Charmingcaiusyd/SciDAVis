/**\page style Coding Style

Coding style guidelines until Sep. 2008:
The following rules are not used everywhere (yet), but are intended as guidelines for new code and eventually
old code should be adapted as well. 

- Files use Unix-style line endings ("\n"); C++ source files are given the extension .cpp.
- Class names start with a capital letter, object/variable names with a lower case letter.
- Methods and functions are named likeThis(), variables like_this and instance variables are prefixed with "m_" ("d_" in older code).
- Property access methods use Qt style: property() and setProperty().
- Private and really short classes only used by one other class (like LayerButton) are included in this classe's source
  files. Undo commands belonging to a class MyClass are gathered in separate files named myclasscommands.cpp and myclasscommands.h.
  All other classes are put into files by themselves. These files are named exactly like the class inside.
- For indentations, tabs are preferred because they allow everyone to choose the indentation depth for him/herself.

Since in Sep. 2008 SciDAVis started to share code with LabPlot, it has gotten even harder to have everything using one coding style. 
After all, we value code reuse over style issues. The following rules/guidelines however are still applicable:
- Files use Unix-style line endings ("\n"); 
- Class names start with a capital letter, object/variable names with a lower case letter.
- Instance variables are prefixed with "m_".
- Property access methods use Qt style: property() and setProperty().
- Private and really short classes only used by one other class (like LayerButton) are included in this classe's source
  files. Undo commands belonging to a class MyClass are gathered in separate files named myclasscommands.cpp and myclasscommands.h.
  All other classes are put into files by themselves. These files are named exactly like the class inside.
- For indentations, tabs are preferred because they allow everyone to choose the indentation depth for him/herself.

Apart from that, the following links are recommended as guidelines for the coding style:
http://techbase.kde.org/index.php?title=Policies/Library_Code_Policy
http://doc.trolltech.com/qq/qq13-apis.html
http://techbase.kde.org/Policies/Kdelibs_Coding_Style

*/
